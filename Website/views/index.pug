extends layout

block content
    section
        article(id="introduction")
            h2 #{loc.HOME_TITLE}
            p #{loc.HOME_INTRO}
        article(id="quick-tip" class="frosted-panel")
            h3 #{loc.TIP_TITLE}
            p #{loc.TIP_TEXT}
        div(class="climate-summary frosted-panel")
            h3 #{loc.CLIMATE_TITLE}
            table
                thead
                    tr
                        th #{loc.MONTH}
                        th #{loc.AVG_TEMP}
                        th #{loc.RAINFALL}
                        th #{loc.SUNLIGHT}
                tbody
                    each data in metrics.climate_data
                        tr
                            td= data.month
                            td= data.avg_temp_c
                            td= data.avg_rain_mm
                            td= data.sunlight_hrs

        div(id="home-data")
            div(id="metrics" class="frosted-panel")
                h2 #{loc.PLANTS}
                div(id="plant-filter")
                    div(class="filter-group")
                        label(for="type-filter") #{loc.TYPE}
                        select(id="type-filter")
                            option(value="") #{loc.ALL}
                            //- Generate a list of all unique plant types for filtering
                            - const types = [...new Set(metrics.plants.map(p => p.type))]
                            each type in types
                                option(value=type)= type

                    div(class="filter-group")
                        label(for="season-filter") #{loc.SEASON}
                        select(id="season-filter")
                            option(value="") #{loc.ALL}
                            //- Generate a list of all unique seasons for filtering
                            - const seasons = [...new Set(metrics.plants.map(p => p.season))]
                            each season in seasons
                                option(value=season)= season

                div(class="plants-metrics")
                    each plant in metrics.plants
                        article(class="plant-card" data-type=plant.type data-season=plant.season)
                            h4= plant.name
                            p= plant.type
                            button(
                            type="button"
                            onclick=`showPlantModal(${JSON.stringify({
                                name: plant.name,
                                scientific_name: plant.scientific_name,
                                description: plant.description,
                                season: plant.season,
                                environmental: metrics.environmental_requirements.find(e => e.plant_id === plant.plant_id),
                                tips: metrics.gardening_tips.filter(t => t.plant_id === plant.plant_id)
                            })})`
                            ) More Info

            div(id="recommendations-panel" class="frosted-panel")
                h2 #{loc.RECOMMENDATIONS_TITLE}
                section(id="recommendations" class="")
                    - for (var i = 0; i < 3; i++)
                        article(class="recommendation-card page-card")
                            h3 #{recs[i].label}
                            p #{recs[i].text}
                            img(src=recs[i].img)
                            
        div(id="home-content")
            section(id="problems")
                article(class="problem-card")
                    h2 #{loc.PROBLEM_TITLE}
                    p #{loc.PROBLEM_TEXT}
                    img(src="images/water-drought.jpg")
    script.
        document.addEventListener("DOMContentLoaded", function () {
            const typeFilter = document.getElementById("type-filter");
            const seasonFilter = document.getElementById("season-filter");
            const cards = document.querySelectorAll(".plant-card");

            function filterCards() {
                const typeVal = typeFilter.value;
                const seasonVal = seasonFilter.value;

                cards.forEach(card => {
                    const matchType = !typeVal || card.dataset.type === typeVal;
                    const matchSeason = !seasonVal || card.dataset.season === seasonVal;
                    card.style.display = (matchType && matchSeason) ? "" : "none";
                });
            }

            typeFilter.addEventListener("change", filterCards);
            seasonFilter.addEventListener("change", filterCards);
        });
